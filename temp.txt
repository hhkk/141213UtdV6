diff --git a/app/controllers/ustodos.server.controller.js b/app/controllers/ustodos.server.controller.js
index 922f9e1..97a4bec 100644
--- a/app/controllers/ustodos.server.controller.js
+++ b/app/controllers/ustodos.server.controller.js
@@ -1,5 +1,11 @@
 'use strict';
 
+
+var UtilClass = require('../../public/lib/ustodo/UtilClass');
+//C:\utd\141213UtdV6\public\lib\ustodo\UtilClass.js
+//C:\utd\141213UtdV6\app\controllers\ustodos.server.controller.js
+
+
 /**
  * Module dependencies.
  */
@@ -34,7 +40,7 @@ exports.read = function(req, res) {
 };
 
 /**
- * Update a Ustodo
+ * Update a Ustodo        hbkk
  */
 exports.update = function(req, res) {
 	var ustodo = req.ustodo ;
@@ -84,24 +90,44 @@ exports.list = function(req, res) {
 	});
 };
 
-/**
- * Ustodo middleware
- */
-exports.ustodoByID = function(req, res, next, id) { 
+/**   * Ustodo middleware  */
+exports.ustodoByID = function(req, res, next, id) {
+	//var s = Ustodo.findById(id);
+	//console.log ('utilclass.getclass of s:' + UtilClass.getClass('hbkk s:', s))
+
+	// ORIGINAL A/B SPLIT HBKK
+	// A
 	Ustodo.findById(id).populate('user', 'displayName').exec(function(err, ustodo) {
+	// B
+		// Ustodo.findOne({name:/ia/}).populate('user', 'displayName').exec(function(err, ustodo) {
 		if (err) return next(err);
 		if (! ustodo) return next(new Error('Failed to load Ustodo ' + id));
 		req.ustodo = ustodo ;
 		next();
-	});
-};
+	}); };
 
-/**
- * Ustodo authorization middleware
- */
+/**  * Ustodo authorization middleware  */
 exports.hasAuthorization = function(req, res, next) {
 	if (req.ustodo.user.id !== req.user.id) {
 		return res.status(403).send('User is not authorized');
 	}
 	next();
 };
+
+
+/**   * Ustodo middleware  */
+exports.ustodoBySearch = function(req, res, next, hk) {
+	//var s = Ustodo.findById(id);
+	console.log ('hbkk in ustodoBySearch ');
+
+	// ORIGINAL A/B SPLIT HBKK
+	// A
+	Ustodo.findById(id).populate('user', 'displayName').exec(function(err, ustodo) {
+		// B
+		// Ustodo.findOne({name:/ia/}).populate('user', 'displayName').exec(function(err, ustodo) {
+		if (err) return next(err);
+		if (! ustodo) return next(new Error('Failed to load Ustodo ' + id));
+		req.ustodo = ustodo ;
+		next();
+	}); };
+
diff --git a/app/routes/ustodos.server.routes.js b/app/routes/ustodos.server.routes.js
index c802db2..050cdb6 100644
--- a/app/routes/ustodos.server.routes.js
+++ b/app/routes/ustodos.server.routes.js
@@ -14,6 +14,13 @@ module.exports = function(app) {
 		.put(users.requiresLogin, ustodos.hasAuthorization, ustodos.update)
 		.delete(users.requiresLogin, ustodos.hasAuthorization, ustodos.delete);
 
+	// hbkk 141229 adding route with search
+	app.route('/ustodos/:ustodoId')
+		.get(ustodos.read)
+		.put(users.requiresLogin, ustodos.hasAuthorization, ustodos.update)
+		.delete(users.requiresLogin, ustodos.hasAuthorization, ustodos.delete);
+
 	// Finish by binding the Ustodo middleware
 	app.param('ustodoId', ustodos.ustodoByID);
+	app.param('ustodoSearch', ustodos.ustodoBySearch);
 };
diff --git a/config/env/development.js b/config/env/development.js
index f63deef..a5ed2bd 100644
--- a/config/env/development.js
+++ b/config/env/development.js
@@ -1,7 +1,7 @@
 'use strict';
 
 module.exports = {
-	db: 'mongodb://localhost/ustodo-dev',
+		db: 'mongodb://localhost/ustodo-dev',
 	app: {
 		title: 'UsToDo - Development Environment'
 	},
diff --git a/public/hk/141221NodeMongoLiveTestTest6.js b/public/hk/141221NodeMongoLiveTestTest6.js
index cea079c..ed41b8b 100644
--- a/public/hk/141221NodeMongoLiveTestTest6.js
+++ b/public/hk/141221NodeMongoLiveTestTest6.js
@@ -11,9 +11,6 @@ var Db = require('mongodb').Db,
     BSON = require('mongodb').pure().BSON,
     assert = require('assert');
 
-var db = new Db('livetesttest', new Server('localhost', 27017));
-// Establish connection to db
-
 
 var getProperties = function (desc, obj)
 {
@@ -29,6 +26,43 @@ var getProperties = function (desc, obj)
 
 }
 
+var fixRegularExpressionForSearch(sori)
+{
+    var s = sori.replace("[","QAWSED_RFTGYH");
+    s = s.replace("]","POLKJH_HGCXFD");
+    //s = s.replace("QAWSEDRFTGYH","]");
+    s = s.replace("(","[(]");
+    s = s.replace(")","[)]");
+    s = s.replace("{","[{]");
+    s = s.replace("}","[}]");
+    s = s.replace(".","[.]");
+    s = s.replace("+","[+]");
+    s = s.replace("%","[%]");
+    s = s.replace("&","[&]");
+    s = s.replace("*","[*]");
+    s = s.replace("?","[?]");
+    s = s.replace("/","[/]");
+    s = s.replace("|","[|]");
+    s = s.replace("\$","[\$]");
+    s = s.replace("\"","[\"]");
+    s = s.replace("\\","\\\\");
+    s = s.replace("QAWSED_RFTGYH","\\["); // at end - already put in brackets
+    s = s.replace("POLKJH_HGCXFD","\\]"); // at end - already put in brackets
+    s = s.replace("^", "\\^");
+    //s = s.replace("^","[^]");
+    //s = s.replace("\\","\\\\");
+    //s = s.replace(")","\\)");
+
+}
+
+
+
+
+
+var db = new Db('livetesttest', new Server('localhost', 27017));
+// Establish connection to db
+
+
 
 
 
diff --git a/public/modules/ustodos/config/ustodos.client.routes.js b/public/modules/ustodos/config/ustodos.client.routes.js
index c3aa0a6..accd4b8 100644
--- a/public/modules/ustodos/config/ustodos.client.routes.js
+++ b/public/modules/ustodos/config/ustodos.client.routes.js
@@ -6,20 +6,29 @@ angular.module('ustodos').config(['$stateProvider',
 		// Ustodos state routing
 		$stateProvider.
 		state('listUstodos', {
+			// http://localhost:3000/#!/ustodos
 			url: '/ustodos',
 			templateUrl: 'modules/ustodos/views/list-ustodos.client.view.html'
 		}).
 		state('createUstodo', {
+			//http://localhost:3000/#!/ustodos/create
 			url: '/ustodos/create',
 			templateUrl: 'modules/ustodos/views/create-ustodo.client.view.html'
 		}).
+		state('findlistUstodos', {
+			// http://localhost:3000/#!/ustodos/findlist
+			url: '/ustodos/findlist',
+			templateUrl: 'modules/ustodos/views/findlist-ustodos.client.view.html'
+		}).
 		state('viewUstodo', {
+			// http://localhost:3000/#!/ustodos/549d29c6006bc4041fb22e70
 			url: '/ustodos/:ustodoId',
 			templateUrl: 'modules/ustodos/views/view-ustodo.client.view.html'
 		}).
 		state('editUstodo', {
 			url: '/ustodos/:ustodoId/edit',
 			templateUrl: 'modules/ustodos/views/edit-ustodo.client.view.html'
-		});
+		})
+		;
 	}
-]);
\ No newline at end of file
+]);
diff --git a/public/modules/ustodos/controllers/ustodos.client.controller.js b/public/modules/ustodos/controllers/ustodos.client.controller.js
index f0bc28a..bdaa09e 100644
--- a/public/modules/ustodos/controllers/ustodos.client.controller.js
+++ b/public/modules/ustodos/controllers/ustodos.client.controller.js
@@ -1,16 +1,70 @@
 'use strict';
 
+
 // Ustodos controller
 angular.module('ustodos').controller('UstodosController', ['$scope', '$stateParams', '$location', 'Authentication', 'Ustodos',
 	function($scope, $stateParams, $location, Authentication, Ustodos) {
 		$scope.authentication = Authentication;
 
+		// Search for new Ustodo (findlist)
+		$scope.search = function() {
+			// find matching
+
+			ustodoSearchString: $stateParams.ustodoId
+			$scope.ustodo = Ustodos.get({
+				// ORIGINAL A/B SPLIT HBKK
+				ustodoSearchString: $stateParams.ustodoId
+				//ustodoId: '54929d5d1d3df384165f4fa2'  // worked!!
+				//name: /road/
+				//name: 'as'
+			});
+
+
+			//getProperties('props this:', this);
+			var ustodo = new Ustodos ({
+				name: this.name,  // hbkk mystery
+				hbkkBindSearch: this.hbkkBindSearch // hbkk mystery
+			});
+			//getProperties('props ustodo:', ustodo);
+
+
+
+
+			// Redirect after save
+			ustodo.$save(function(response) {
+				$location.path('ustodos/' + response._id);
+
+				// Clear form fields
+				$scope.name = '';
+			}, function(errorResponse) {
+				$scope.error = errorResponse.data.message;
+			});
+		};
+
+		// Search for one hbkk existing Ustodo by string
+		$scope.searchOne = function() {
+			console.log ('hbkk getting ustodo searchOne :' + $stateParams.ustodoId);
+			$scope.ustodo = Ustodos.get({
+				// ORIGINAL A/B SPLIT HBKK
+				ustodoSearchString: $stateParams.ustodoId
+				//ustodoId: '54929d5d1d3df384165f4fa2'  // worked!!
+				//name: /road/
+				//name: 'as'
+			});
+		};
+
 		// Create new Ustodo
 		$scope.create = function() {
 			// Create new Ustodo object
+
+			getProperties('props this:', this);
 			var ustodo = new Ustodos ({
-				name: this.name
+				name: this.name  // hbkk mystery
 			});
+			//getProperties('props ustodo:', ustodo);
+
+
+
 
 			// Redirect after save
 			ustodo.$save(function(response) {
@@ -58,9 +112,41 @@ angular.module('ustodos').controller('UstodosController', ['$scope', '$statePara
 
 		// Find existing Ustodo
 		$scope.findOne = function() {
-			$scope.ustodo = Ustodos.get({ 
+			$scope.ustodo = Ustodos.get({
+				// ORIGINAL A/B SPLIT HBKK
 				ustodoId: $stateParams.ustodoId
+				//ustodoId: '54929d5d1d3df384165f4fa2'  // worked!!
+				//name: /road/
+				//name: 'as'
 			});
 		};
 	}
-]);
\ No newline at end of file
+]);
+
+
+
+var getProperties = function (desc, obj)
+{
+	var j = 0 ;
+	for(var propertyName in obj)
+	{
+		j++;
+		var hasOwnPropIndicator = obj.hasOwnProperty(propertyName);
+		console.log (j + '. props desc [' + desc + '] name ['+propertyName + '] value [' + obj[propertyName] + '] hasOwnPropIndicator [' + hasOwnPropIndicator + ']');
+		// propertyName is what you want
+		// you can get the value like this: myObject[propertyName]
+	}
+};
+
+
+
+
+
+
+
+
+
+
+
+
+
diff --git a/public/modules/ustodos/views/create-ustodo.client.view.html b/public/modules/ustodos/views/create-ustodo.client.view.html
index a588236..ec732f7 100644
--- a/public/modules/ustodos/views/create-ustodo.client.view.html
+++ b/public/modules/ustodos/views/create-ustodo.client.view.html
@@ -8,7 +8,7 @@
                 <div class="form-group">
                     <label class="control-label" for="name">Name</label>
                     <div class="controls">
-                        <input type="text" data-ng-model="name" id="name" class="form-control" placeholder="Name" required>
+                        <input type="text" data-ng-model="hbkksearch" id="name" class="form-control" placeholder="Name" required>
                     </div>
                 </div>
                 <div class="form-group">
@@ -20,4 +20,4 @@
             </fieldset>
         </form>
     </div>
-</section>
\ No newline at end of file
+</section>
diff --git a/public/modules/ustodos/views/findlist-ustodos.client.view.html b/public/modules/ustodos/views/findlist-ustodos.client.view.html
index 1bfb3a7..edef217 100644
--- a/public/modules/ustodos/views/findlist-ustodos.client.view.html
+++ b/public/modules/ustodos/views/findlist-ustodos.client.view.html
@@ -1,19 +1,45 @@
-<section data-ng-controller="UstodosController" data-ng-init="find()">
+<section data-ng-controller="UstodosController">
     <div class="page-header">
-        <h1>Ustodos</h1>
+        <h1>New Ustodo</h1>
+    </div>
+    <div class="col-md-12">
+        <form class="form-horizontal" data-ng-submit="search()" novalidate>
+            <fieldset>
+                <div class="form-group">
+                    <label class="control-label" for="name">Name</label>
+                    <div class="controls">
+                        <input type="text" data-ng-model="hbkkBindSearch" hk = "hbkkBindSearch" id="name" class="form-control" placeholder="Name" required>
+                    </div>
+                </div>
+                <div class="form-group">
+                    <input type="submit" class="btn btn-default">
+                </div>
+                <div data-ng-show="error" class="text-danger">
+                    <strong data-ng-bind="error"></strong>
+                </div>
+            </fieldset>
+        </form>
     </div>
+</section>
+_____
+<!--original A/B split hbkk-->
+<!--<section data-ng-controller="UstodosController" data-ng-init="find({name: /ia\/})">-->
+<section data-ng-controller="UstodosController" data-ng-init="find()">
+    <!--<div class="page-header">-->
+        <!--<h1>Ustodos</h1>-->
+    <!--</div>-->
     <div class="list-group">
         <a data-ng-repeat="ustodo in ustodos" data-ng-href="#!/ustodos/{{ustodo._id}}" class="list-group-item">
-			<small class="list-group-item-text">
-				Posted on
-				<span data-ng-bind="ustodo.created | date:'medium'"></span>
-				by
-				<span data-ng-bind="ustodo.user.displayName"></span>
-			</small>
-			<h4 class="list-group-item-heading" data-ng-bind="ustodo.name"></h4>
+            <small class="list-group-item-text">
+                Posted on
+                <span data-ng-bind="ustodo.created | date:'medium'"></span>
+                by
+                <span data-ng-bind="ustodo.user.displayName"></span>
+            </small>
+            <h4 class="list-group-item-heading" data-ng-bind="ustodo.name"></h4>
         </a>
     </div>
     <div class="alert alert-warning text-center" data-ng-hide="!ustodos.$resolved || ustodos.length">
-    	No Ustodos yet, why don't you <a href="/#!/ustodos/create">create one</a>?
+        No Ustodos yet, why don't you <a href="/#!/ustodos/create">create one</a>?
     </div>
-</section>
\ No newline at end of file
+</section>
